upstream periodo_server {
    server $UPSTREAM_HOST fail_timeout=0;
}

map $upstream_status $no_cache {
    500 1;
    503 1;
    default 0;
}

# caching configuration
proxy_cache_path
    # path to cache dir
    /mnt/cache
    # 2 directory levels, 1st is 1 char, 2nd is 2 chars
    levels=1:2
    # put temporary files in the cache dir
    use_temp_path=off
    # name and size of the shared memory zone where keys are stored
    keys_zone=periodo_proxy_cache:10m
    # time after which unrequested files are purged
    inactive=1y
    # maximum cache size before least recently requested files are purged
    max_size=2G;


server {
    listen 8080;
    listen [::]:8080;

    charset utf-8;

    # If the request body is larger than 8K, 
    # it is written to a temporary file
    client_body_temp_path "/tmp" 1 2;
    client_max_body_size 1G;

    gzip on;
    gzip_vary on;

    include mime.types;
    types {
        application/rdf+xml rdf;
        text/turtle ttl;
    }

    location = /d.ttl {
        return 301 https://$http_host/dataset.ttl;
    }
    location = /d.csv {
        return 301 https://$http_host/dataset.csv;
    }

    location = /v.ttl {
        alias /srv/www/vocab.ttl;
    }
    location = /vocabulary.ttl {
        alias /srv/www/vocab.ttl;
    }

    location = /v.ttl.html {
        alias /srv/www/vocab.html;
    }
    location = /vocabulary.ttl.html {
        alias /srv/www/vocab.html;
    }

    location = /highlight-style.css {
        alias /srv/www/highlight-style.css;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;

        proxy_cache periodo_proxy_cache;
        proxy_cache_key $request_uri;
        proxy_cache_methods GET HEAD;
        proxy_cache_revalidate on;
        proxy_no_cache $no_cache;

        add_header X-Cache-Status $upstream_cache_status;

        proxy_redirect off;
        proxy_pass http://periodo_server;
        proxy_read_timeout 600s;
    }
}
